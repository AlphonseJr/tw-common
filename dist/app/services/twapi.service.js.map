{"version":3,"file":"twapi.service.js","sourceRoot":"","sources":["twapi.service.ts"],"names":[],"mappings":"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","sourcesContent":["///<reference path=\"../../../typings/browser.d.ts\"/>\n\nimport { Injectable } from '@angular/core';\nimport { Http, HTTP_PROVIDERS, RequestOptions, Headers }  from '@angular/http';\nimport { User }  from './../models/user.model';\nimport { Watch }  from './../models/watch.model';\nimport { Measure, MeasureStatus }  from './../models/measure.model';\nimport { ModelFactory }  from './../models/model.factory';\n\nimport 'rxjs/add/operator/toPromise';\n\n@Injectable()\n/**\n * Exposes the Toolwatch API.\n * Returns promeses on domain objects\n */\nexport class TwAPIService {\n\n\t//Defines headers and request options\n\tprivate headers: Headers = new Headers({ 'Content-Type': 'application/json' });\n\tprivate options: RequestOptions = new RequestOptions({ headers: this.headers });\n\t\n\tprivate baseUrl:string = \"http://localhost/api/\";\n\tprivate static apikey:string;\n\n\t/**\n\t * Inject http service\n\t * @param {Http} private http \n\t */\n\tconstructor(private http: Http) {}\n\n\t/**\n\t * Log a user using email and password\n\t * @param  {string}        email   \n\t * @param  {string}        password\n\t * @return {Promise<User>}         \n\t */\n\tlogin(email: string, password: string): Promise<User> {\n\n\t\tlet creds = { email: email, password: password };\n\t\treturn this.http.put(\n\t\t\tthis.baseUrl + \"users\", \n\t\t\tJSON.stringify(creds), \n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\t\t\t\tlet jsonUser = response.json();\n\t\t\t\tif (jsonUser.key !== undefined) {\n\t\t\t\t\tTwAPIService.apikey = jsonUser.key;\n\t\t\t\t\tthis.headers.delete('X-API-KEY');\n\t\t\t\t\tthis.headers.append('X-API-KEY', TwAPIService.apikey);\n\t\t\t\t}\n\t\t\t\treturn ModelFactory.buildUser(response.json())\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Registers a new user\n\t * @param  {string}        email   \n\t * @param  {string}        password\n\t * @param  {string}        name    \n\t * @param  {string}        lastname\n\t * @param  {string}        country \n\t * @return {Promise<User>}         \n\t */\n\tsignup(email: string, password: string, name?: string, lastname?: string, country?: string): Promise<User> {\n\n\t\treturn this.http.post(\n\t\t\tthis.baseUrl + \"users\",\n\t\t\tJSON.stringify({\n\t\t\t\temail: email, \n\t\t\t\tpassword: password,\n\t\t\t\tname: name,\n\t\t\t\tlastname: lastname,\n\t\t\t\tcountry:country\n\t\t\t}),\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => ModelFactory.buildUser(response.json())\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Deletes the account currently logged in.\n\t * @return {Promise<boolean>}\n\t */\n\tdeleteAccount():Promise<boolean>{\n\n\t\treturn this.http.delete(\n\t\t\tthis.baseUrl + \"users\",\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => true\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Update or insert a watch\n\t * @param  {Watch}          watch\n\t * @return {Promise<Watch>}      \n\t */\n\tupsertWatch(watch: Watch): Promise<Watch> {\n\n\t\tif(watch.id == null){\n\t\t\treturn this.insertWatch(watch);\n\t\t}else{\n\t\t\treturn this.updateWatch(watch);\n\t\t}\n\t}\n\n\t/**\n\t * Deletes a watch and update the user accordingly\n\t * @param  {User}          user  \n\t * @param  {Watch}         watch \n\t * @return {Promise<User>}       \n\t */\n\tdeleteWatch(user:User, watch:Watch):Promise<User>{\n\t\tlet deleteOptions = new RequestOptions({ headers: this.headers });\n\t\tdeleteOptions.body = JSON.stringify({ watchId: watch.id });\n\n\t\treturn this.http.delete(\n\t\t\tthis.baseUrl + \"watches\",\n\t\t\tdeleteOptions\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\n\t\t\t\tuser.watches = user.watches.filter(\n\t\t\t\t\tfunction(filter: Watch) {\n\t\t\t\t\t\treturn filter.id != watch.id;\n\t\t\t\t\t}\n\t\t\t\t);\n\n\t\t\t\treturn user;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Insert or update a measure and the related watch\n\t * @param  {Watch}          watch  \n\t * @param  {Measure}        measure\n\t * @return {Promise<Watch>}        \n\t */\n\tupsertMeasure(watch: Watch, measure: Measure): Promise<Watch> {\n\t\tif(measure.id == null){\n\t\t\treturn this.insertMeasure(watch, measure);\n\t\t}else{\n\t\t\treturn this.updateMeasure(watch, measure);\n\t\t}\n\t}\n\n\t/**\n\t * Delete a measure and the update the related watch\n\t * @param  {Watch}          watch  \n\t * @param  {Measure}        measure\n\t * @return {Promise<Watch>}        \n\t */\n\tdeleteMeasure(watch: Watch, measure: Measure): Promise<Watch> {\n\n\t\tlet deleteOptions = new RequestOptions({ headers: this.headers });\n\t\tdeleteOptions.body = JSON.stringify({measureId:measure.id});\n\n\t\treturn this.http.delete(\n\t\t\tthis.baseUrl + \"measures\",\n\t\t\tdeleteOptions\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\n\t\t\t\twatch.measures = watch.measures.filter(\n\t\t\t\t\tfunction(filter: Measure) {\n\t\t\t\t\t\treturn filter.id != measure.id;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\treturn watch;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Retrieve atomic clock time adjusted for network latency\n\t * @param  {()=>void} statusCallback Called at each partial complete\n\t * @param  {number = 0} precison How many calls we want to aveage\n\t * @return {Promise<Date>} \n\t */\n\taccurateTime(statusCallback?:()=>void, \n\t\tprecison:number = 10): Promise<Date>{\n\n\t\t//Stores each Promise in array\n\t\tlet promises:Promise<number>[] = [];\n\t\tfor (var i = 0; i < precison; ++i) {\n\t\t\tpromises.push(this.fetchTime(statusCallback));\n\t\t}\n\n\t\t/**\n\t\t * Promise.all() is the Promise equivalent of thread.join().\n\t\t * It'll wait for all promises to be received. \n\t\t *\n\t\t * Returns a date adjusted w/ the median offset between \n\t\t * atomic clock and js time. \n\t\t * The offset received in each promise also accounts for\n\t\t * the network roundtrip time.\n\t\t */\n\t\treturn Promise.all(promises).then((results:any[]) => {\n\t\t\tresults.sort(function(a: any, b: any) { return a - b; });\n\n\t\t\tlet half: number = Math.floor(results.length / 2);\n\t\t\tlet medianOffset;\n\n\t\t\tif (results.length % 2) {\n\t\t\t\tmedianOffset = results[half];\n\t\t\t} else {\n\t\t\t\tmedianOffset = (results[half - 1] + results[half]) / 2.0;\n\t\t\t}\n\n\t\t\treturn new Date(Date.now() - medianOffset);\n\t\t});\n\t}\n\n\t/**\n\t * Fetch offset between atomic clock and js time\n\t * @param {() => void} statusCallback\n\t */\n\tprivate fetchTime(statusCallback?: () => void)\n\t\t: Promise<number> {\n\n\t\tlet beforeTime: number = Date.now();\n\t\treturn this.http.get(\n\t\t\tthis.baseUrl + \"time\",\n\t\t\tthis.options).toPromise().then(\n\t\t\tresponse => {\n\n\t\t\t\tif (statusCallback !== undefined){\n\t\t\t\t\tstatusCallback();\n\t\t\t\t}\n\n\t\t\t\tlet now: number = Date.now();\n\t\t\t\tlet timeDiff = (now - beforeTime) / 2;\n\t\t\t\tlet serverTime = response.json().time - timeDiff;\n\t\t\t\treturn Date.now() - serverTime;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Update a measure and the watch it belongs to\n\t * @param  {Watch}          watch  \n\t * @param  {Measure}        measure\n\t * @return {Promise<Watch>}        \n\t */\n\tprivate updateMeasure(watch: Watch, measure: Measure): Promise<Watch> {\n\t\treturn this.http.put(\n\t\t\tthis.baseUrl + \"measures\",\n\t\t\tJSON.stringify({\n\t\t\t\tmeasureId: measure.id,\n\t\t\t\treferenceTime: measure.accuracyReferenceTime,\n\t\t\t\tuserTime: measure.accuracyUserTime\n\t\t\t}),\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\t\t\t\tlet json = response.json();\n\t\t\t\tmeasure.addAccuracy(json.accuracy, json.accuracyAge, json.percentile);\n\t\t\t\treturn watch;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Insert a measure and the watch it belongs to\n\t * @param  {Watch}          watch  \n\t * @param  {Measure}        measure\n\t * @return {Promise<Watch>}        \n\t */\n\tprivate insertMeasure(watch: Watch, measure: Measure): Promise<Watch> {\n\t\treturn this.http.post(\n\t\t\tthis.baseUrl + \"measures\",\n\t\t\tJSON.stringify({\n\t\t\t\twatchId: watch.id,\n\t\t\t\treferenceTime: measure.measureReferenceTime,\n\t\t\t\tuserTime: measure.measureUserTime\n\t\t\t}),\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\t\t\t\tmeasure.id = response.json().measureId;\n\t\t\t\twatch.measures.push(measure);\n\t\t\t\treturn watch;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\t/**\n\t * Insert a watch\n\t * @param  {Watch}          watch\n\t * @return {Promise<Watch>}      \n\t */\n\tprivate insertWatch(watch: Watch):Promise<Watch>{\n\t\treturn this.http.post(\n\t\t\tthis.baseUrl + \"watches\",\n\t\t\tJSON.stringify({\n\t\t\t\tbrand: watch.brand,\n\t\t\t\tname:watch.name,\n\t\t\t\tyearOfBuy:watch.yearOfBuy,\n\t\t\t\tserial: watch.serial,\n\t\t\t\tcaliber:watch.caliber\n\t\t\t}),\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\t\t\t\twatch.id = response.json().id;\n\t\t\t\treturn watch;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t\t\n\t}\n\n\t/**\n\t * Update a watch\n\t * @param  {Watch}          watch\n\t * @return {Promise<Watch>}      \n\t */\n\tprivate updateWatch(watch: Watch): Promise<Watch> {\n\t\treturn this.http.put(\n\t\t\tthis.baseUrl + \"watches\",\n\t\t\tJSON.stringify({\n\t\t\t\tid: watch.id,\n\t\t\t\tbrand: watch.brand,\n\t\t\t\tname: watch.name,\n\t\t\t\tyearOfBuy: watch.yearOfBuy,\n\t\t\t\tserial: watch.serial,\n\t\t\t\tcaliber: watch.caliber\n\t\t\t}),\n\t\t\tthis.options\n\t\t).toPromise().then(\n\t\t\tresponse => {\n\t\t\t\treturn watch;\n\t\t\t}\n\t\t).catch(this.handleError);\n\t}\n\n\n\t/**\n\t * Log error to console\n\t * @param {any} error [description]\n\t */\n\tprivate handleError(error: any) {\n\t\t// In a real world app, we might use a remote logging infrastructure\n\t\t// We'd also dig deeper into the error to get a better message\n\t\tlet errMsg = (error.message) ? error.message :\n\t\t\terror.status ? `${error.status} - ${error.statusText}` : 'Server error';\n\t\tconsole.error(errMsg); // log to console instead\n\t\treturn error;\n\t}\n\n}\n"]}